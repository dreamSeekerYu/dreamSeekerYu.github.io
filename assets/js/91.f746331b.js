(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{451:function(s,a,t){"use strict";t.r(a);var n=t(46),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("git")]),s._v(" "),t("h4",{attrs:{id:"gitee-采用-微信登录的方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitee-采用-微信登录的方式"}},[s._v("#")]),s._v(" gitee  采用 微信登录的方式")]),s._v(" "),t("h4",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("删除本地分支\ngit branch -d <BranchName>\n\n删除远程分支\ngit push origin --delete <BranchName>\n\n将远程分支拉取到本地新分支\n git checkout -b smp_optimization origin/smp_optimization\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h4",{attrs:{id:"github-加速指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-加速指南"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://mp.weixin.qq.com/s/DRfeMOingKP4pmRuEbTxWA",target:"_blank",rel:"noopener noreferrer"}},[s._v("github 加速指南"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("host配置在线方案")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    打开系统hosts文件编辑即可，帅编的如下\n    140.82.114.4   github.com\n    199.232.5.194  github.global.ssl.fastly.net\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("配置 github 提交")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 配置局部项目的用户名和密码\ngit config user.name "dreamSeekerYu"\ngit config user.password "bai18810493057"\ngit config credential.helper store // 配置记住用户密码\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("pass：bai18810493057\nname：dreamSeekerYu\nor：3024637102@qq.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"单独提交部分更改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单独提交部分更改"}},[s._v("#")]),s._v(" 单独提交部分更改")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('git status\ngit add 修改的文件\ngit commit -m ""\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"vs-code-单独提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-单独提交"}},[s._v("#")]),s._v(" Vs code 单独提交")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("先在代码管理工具里面将想提交的文件添加到暂存更改里面  === git add\n\n然后正常的添加commit 标记并提交推送     === git commit + git push\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h4",{attrs:{id:"配置ssh-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置ssh-key"}},[s._v("#")]),s._v(" 配置ssh key")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('ssh-keygen -t rsa -C "yupeng.bai@ucarinc,com"\nEnter file in which to save the key (/c/Users/baiyupeng/.ssh/id_rsa):  点击回车\n然后依次输入密码\n找到目录，打开文件，将key 复制粘贴到对应的gitlab上面即可\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h4",{attrs:{id:"配置全局用户名和密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置全局用户名和密码"}},[s._v("#")]),s._v(" 配置全局用户名和密码")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先卸载本地的配置证书")]),s._v("\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("system "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("unset credential"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("helper\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查看配置")]),s._v("\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("list\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置全局用户名和密码")]),s._v("\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("global user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yupeng.bai"')]),s._v("\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("global user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("password "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bai!@#Bai"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置局部项目的用户名和密码")]),s._v("\ngit config user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yupeng.bai"')]),s._v("\ngit config user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("password "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bai!@#123"')]),s._v("\ngit config credential"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("helper store "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置记住用户密码")]),s._v("\n\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("global user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n\n\n执行git init 命令进行初始化\n\ngit config user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"happy"')]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//git config --global 设置全局配置不带--global 为当前项目配置")]),s._v("\n\ngit config user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"111@sina.com"')]),s._v("\n\ngit config credential"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("helper store"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置记住用户密码")]),s._v("\n\ngit remote add origin https"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("github"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dreamhappy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("mapEdit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("git"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//配置自己的远程代码仓库地地址")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置错误可以用git remote remove origin 删除设置重新配置或 git remote set-url origin 进行修改")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h4",{attrs:{id:"回滚操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回滚操作"}},[s._v("#")]),s._v(" 回滚操作")]),s._v(" "),t("h4",{attrs:{id:"缓存区操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存区操作"}},[s._v("#")]),s._v(" 缓存区操作")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 暂存当前本地修改的代码")]),s._v("\ngit stash\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同步代码 ")]),s._v("\ngit fetch origin\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\ngit merge origin master\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ")]),s._v("\ngit push origin master\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取出暂存区的代码")]),s._v("\ngit stash pop\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h4",{attrs:{id:"创建分支-在已有仓库的情况下-提交到分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建分支-在已有仓库的情况下-提交到分支"}},[s._v("#")]),s._v(" 创建分支（在已有仓库的情况下，提交到分支）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("1. git init 在本地建立一个仓库\n\n2.git add . 将文件提交到暂存区\n\n3.git status 检查是否提交成功\n\n4.git commit -m “备注”\n\n5.git remote add origin  库名（http。。。）//将本地仓库与远程仓库建立连接\n\n6.git branch 查看分支名称\n\n7.git branch 分支名 //创建新分支\n\n8.git push origin 分支名 //将分支加到线上\n\n9.刷新页面看是否成功\n")])])]),t("h4",{attrs:{id:"git基本创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git基本创建"}},[s._v("#")]),s._v(" git基本创建")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("1.先在gitGub上创建一个仓库\n\n2.在要上传的文件中，右击git Bash Here\n\n3.输入命令 git init 在本地建立一个仓库\n\n4.git status 检查提交文件\n\n5.git add . 将文件提交到暂存区\n\n6.git status 检查是否提交成功\n\n7.git commit -m “备注”（对本次的提交进行备注，以便后期版本回退等操作）\n\n8.git remote add origin  库名（http。。。）\n      （将之前在github上创建的仓库地址复制，然后使用命令将本地仓库与远程仓库建立连接）\n\n9.git push -U origin master 上传（将暂存区的文件推送至远程仓库）\n")])])]),t("h4",{attrs:{id:"更新分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新分支"}},[s._v("#")]),s._v(" 更新分支")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('1.git checkout 分支名    切换分支\n\n2.git add . 提交新代码\n\n3.girl commit -m "备注"\n\n4.git push origin 分支名\n')])])]),t("h4",{attrs:{id:"git-branch-查看本地所有分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-查看本地所有分支"}},[s._v("#")]),s._v(" git branch                  查看本地所有分支")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("        branchName      创建分支\n        \n        -r              查看远程所有分支   \n        \n        -a  all         查看本地和远程所有分支\n        \n        -b              创建并切换分支\n")])])]),t("h4",{attrs:{id:"切换分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[s._v("#")]),s._v(" 切换分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git checkout branchName     切换到分支\n\ngit checkout -b branchName  创建并切换分支\n\ngit fetch origin farBranchName:localBranchName \n\n                            拉取远分支，并创建本地分支\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h4",{attrs:{id:"合并分支-merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并分支-merge"}},[s._v("#")]),s._v(" 合并分支  merge")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\ngit merge branchName        合并分支\ngit merge -abort\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h5",{attrs:{id:"下载仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载仓库"}},[s._v("#")]),s._v(" 下载仓库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git clone  库名（http。。。）\n克隆对应的分支\ngit clone -b origin dev\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h4",{attrs:{id:"合并到dev分支上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并到dev分支上"}},[s._v("#")]),s._v(" 合并到dev分支上")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('\t1.git checkout dev  切换到dev分支\n\n\t2.git merge 要合并的分支名（如果有冲突 ---\x3e 解决冲突 ---\x3e git commit -m "备注" ---\x3e git push origin dev）\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"从dev放到自己的分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从dev放到自己的分支"}},[s._v("#")]),s._v(" 从dev放到自己的分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\t1.git checkout 自己的分支名\n\n\t2.git pull origin dev  将dev分支的代码拉取到本分支\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"版本回退-找回上一次的代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回退-找回上一次的代码"}},[s._v("#")]),s._v(" 版本回退（找回上一次的代码）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("查看提交记录\ngit log \n（ID：从git log 中查到的对应ID）\ngit reset --hard ID\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"unrelated-histories"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unrelated-histories"}},[s._v("#")]),s._v(" unrelated histories")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("版本问题报错  **fatal: refusing to merge unrelated histories**\n\n强行拉去分支  \ngit pull origin branchName --allow-unrelated-histories\n")])])]),t("h2",{attrs:{id:"no-upstream"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-upstream"}},[s._v("#")]),s._v(" no upstream")]),s._v(" "),t("h4",{attrs:{id:"git-master-branch-has-no-upstream-branch的解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-master-branch-has-no-upstream-branch的解决"}},[s._v("#")]),s._v(" Git master branch has no upstream branch的解决")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\n在push代码时，出现“git master branch has no upstream branch”问题的原因是没有将本地的分支与远程仓库的分支进行关联\n\n第一种如上图中的提示：\ngit push --set-upstream origin master\n\n其中的origin是你在clone远程代码时，git为你创建的指向这个远程代码库的标签，它指向repository。为了能清楚了解你要指向的repository，可以用命令git remote -v进行查看。master是你远程的branch，可以用git branch -a查看所有分支，远程分支是红色的部分。然后确定好这两个值后，将值换掉即可。\n\n另一种方法是：\ngit push -u origin master\n\n同样根据自己的需要，替换origin和master。\n两个命令的区别是第一条命令是要保证你的远程分支存在，如果不存在，也就无法进行关联。而第二条指令即使远程没有你要关联的分支，它也会自动创建一个出来，以实现关联。\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h3",{attrs:{id:"git-push远程分支error-src-refspec-xxx-does-not-match-any"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-push远程分支error-src-refspec-xxx-does-not-match-any"}},[s._v("#")]),s._v(" git push远程分支error: src refspec xxx does not match any.")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\ngit push origin HEAD:branchName\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"删除新建的本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除新建的本地分支"}},[s._v("#")]),s._v(" 删除新建的本地分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" git branch -d branch_name\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"删除新建的远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除新建的远程分支"}},[s._v("#")]),s._v(" 删除新建的远程分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -r -d origin/branch_dev \nor\ngit push origin :branch_dev\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"撤销操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[s._v("#")]),s._v(" 撤销操作")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("撤销所有文件\ngit checkout head .\n\n复位到对应的版本\ngit reset --hard commitID\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"重命名分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重命名分支"}},[s._v("#")]),s._v(" 重命名分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("不会覆盖已有的分支   会导致命名失败\ngit branch -m oldName newName\n\n强行命名并覆盖\ngit branch -M oldName newName\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h4",{attrs:{id:"删除分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[s._v("#")]),s._v(" 删除分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("删除已经合并过的分支\n如果分支没有被合并  删除失败\ngit branch -d branchName\n\n不管分支合并与否  直接删除\ngit branch -D branchName\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h4",{attrs:{id:"查看分支的历史记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看分支的历史记录"}},[s._v("#")]),s._v(" 查看分支的历史记录")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git log \ngitk 查看当前分支的历史记录\ngitk branchName 查看某分支的历史记录\ngitk --all 查看所有分支\n\n查看每个分支最后的提交\ngit branch -v\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h4",{attrs:{id:"git-pull的merge问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-pull的merge问题"}},[s._v("#")]),s._v(" git pull的merge问题")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("使用 git pull: 更新代码，git 会自动merge不同的更新，\n\n   a.  如果git 自动merge成功，再进行 git push操作就会成功。\n\n   b.  如果git 自动merge失败，使用git status可以查看哪个文件 merge失败，需要手动修改冲突地方，再进行git add git commit操作，之后再git push\n   \nBut，这种方法提交后，就会在提交记录里显示 merge: *********************，而git rebase就能解决这种问题，解决方法如下\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("解决")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"配置-ssh-agent"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-ssh-agent"}},[s._v("#")]),s._v(" 配置 SSH-agent")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"git-rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[s._v("#")]),s._v(" git rebase")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    假如先前推送过代码分支到Gitlab服务器，再执行rebase，\n    那么在推送时候，可能服务器会报错。为了克服这个问题，可以使用-f参数\n\n    git push origin rebase -branch –f\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h4",{attrs:{id:"提交代码到没有权限的git-仓库-fork"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提交代码到没有权限的git-仓库-fork"}},[s._v("#")]),s._v(" 提交代码到没有权限的git 仓库  fork")]),s._v(" "),t("h4",{attrs:{id:"git入门-7-git-tags-为版本打上tags"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git入门-7-git-tags-为版本打上tags"}},[s._v("#")]),s._v(" git入门（7）-Git tags----为版本打上tags")]),s._v(" "),t("p",[s._v("本文链接：https://blog.csdn.net/codectq/article/details/51569549")]),s._v(" "),t("p",[s._v("有时候，在项目开发过程中，版本的发布可能会一直持续，在版本发布的过程中，可能用户更新的步调不一致导致在某个特定版本上，用户出现问题。当需要版本追溯时，如果版本中存在tag，则可以直接定位到版本，并确认问题是否存在。")]),s._v(" "),t("p",[s._v("可以通过git tag查看目前有哪些tag，因为tag的命名或者标注通常都会使用版本号信息。如果想看某个标签的具体信息，可以使用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git show tag-name\n如果看到我们想要的版本号tag，则可以直接使用\n\ngit checkout tag-name\n将工程定位到相应的tag处。\n\n那么如果进行打tag和提交呢？\n\ngit tag -a V-1.02.003 -m “v-1.02.003 xxx”\n通常情况下，我们会使用上面的方法为当前版本添加附注\n\n提交可以有两种方式，单独提交本次tag\n\ngit push origin V-1.02.003\n提交所有的tags\n\ngit push –tags\n另外，如果想为之前的提交提交tag，可以使用\n\ngit tag -a V-0.02.005 commit-id\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h4",{attrs:{id:"git-commit-提交规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-提交规范"}},[s._v("#")]),s._v(" git commit 提交规范")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/201bd81e7dc9",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("每次提交，Commit message 都包括三个部分：header，body 和 footer\n\nheader 是必需的，body 和 footer 可以省略\n\n不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。\n\nHeader部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）\n\n    type 用于说明 commit 的类别，只允许使用下面7个标识。\n        \n        feat：新功能（feature）\n        \n        fix：修补bug\n        \n        docs：文档（documentation）\n        \n        style： 格式（不影响代码运行的变动）\n        \n        refactor：重构（即不是新增功能，也不是修改bug的代码变动）\n        \n        test：增加测试\n        \n        chore：构建过程或辅助工具的变动\n        \n            如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中\n            其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要\n")])])]),t("h4",{attrs:{id:"vs-code-配置-commit-规范插件-主要有两款"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-配置-commit-规范插件-主要有两款"}},[s._v("#")]),s._v(" Vs code 配置 commit 规范插件  主要有两款")]),s._v(" "),t("h5",{attrs:{id:"_1-git-commit-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-commit-plugin"}},[s._v("#")]),s._v(" 1. git-commit-plugin")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.v2ex.com/t/654391",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1),s._v("Git-commit-plugin For Vscode 一款自动生成规范 git 提交信息的插件")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v(" ctrl + Shift + P 呼出 指令行，并键入指令 show git commit template 或者点击 git 插件栏上的小图标唤醒插件界面\n")])])]),t("h5",{attrs:{id:"_2-git-commit-lint-vscode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-commit-lint-vscode"}},[s._v("#")]),s._v(" 2. git-commit-lint-vscode")]),s._v(" "),t("p",[s._v("配置好之后直接在提交工具里面点击按钮即可触发 commit 配置选项")])])}),[],!1,null,null,null);a.default=e.exports}}]);